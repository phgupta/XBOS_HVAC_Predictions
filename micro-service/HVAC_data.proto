// To create _pb2.py and _pb2_grpc.py files, run the command,
// python -m grpc_tools.protoc -I=. --python_out=. --grpc_python_out=. HVAC_data.proto

syntax = "proto3";
package hvac_data;

// The HVAC Data definition.
service HVACData {

  // A simple RPC.
  // CHECK: Sends the outside temperature for a given building, within a duration (start, end), and a requested window
  // An error is returned if there is no meter, weather or tstat data for the given request.
  rpc GetHVACData (HVACRequest) returns (HVACReply) {}

}

// The request message containing the requested data information.
message HVACRequest {

    // The name of the building
    string building = 1;

    // The start time in Unixnanoseconds
    int64 start = 2;

    // The end time in Unixnanoseconds
    int64 end = 3;

    // Point type - e.g. Building_Electric_Meter, Green_Button_Meter
    string point_type = 4;

    message Aggregate {

        // Values include MEAN, MAX, MIN, COUNT, SUM, RAW (the temporal window parameter is ignored)
        string meter = 1;
        string tstat = 2;

    }

    message Window {

        // The frequency/duration window (e.g., 10s, 15m, 1h)
        // Supported units are: d,h,m,s
        string meter = 1;
        string tstat = 2;

    }

}

// Dataframe structure for HVAC data
message HVACPoint {

    int64 time = 1;

    // Indoor air temperature
    double iat = 2;

    // Outdoor air temperature
    double oat = 3;

    // HVAC zones & their states
    repeated int32 state = 4;

}

// The response message containing HVAC data
message HVACReply {

    // Dataframe containing HVAC data
    repeated HVACPoint point = 1;

}