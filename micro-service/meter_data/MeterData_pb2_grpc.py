# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import MeterData_pb2 as MeterData__pb2


class MeterDataStub(object):
  """RPC definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetMeterData = channel.unary_unary(
        '/meter_data.MeterData/GetMeterData',
        request_serializer=MeterData__pb2.Request.SerializeToString,
        response_deserializer=MeterData__pb2.Reply.FromString,
        )


class MeterDataServicer(object):
  """RPC definition.
  """

  def GetMeterData(self, request, context):
    """A simple RPC.
    An error is returned if there is no meter data for the given request.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MeterDataServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetMeterData': grpc.unary_unary_rpc_method_handler(
          servicer.GetMeterData,
          request_deserializer=MeterData__pb2.Request.FromString,
          response_serializer=MeterData__pb2.Reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'meter_data.MeterData', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
